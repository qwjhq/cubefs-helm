{{- if .Values.component.lcnode }}
{{- $envAll := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lcnode
  labels:
{{ tuple $envAll .Release.Namespace "lcnode" | include "helm-toolkit.metadata_labels" | indent 4 }}
spec:
  replicas: {{ .Values.lcnode.replicas }}
  selector:
    matchLabels:
{{ tuple $envAll .Release.Namespace "lcnode" | include "helm-toolkit.labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll .Release.Namespace "lcnode" | include "helm-toolkit.labels" | indent 8 }}
    spec:
      terminationGracePeriodSeconds: 60
      {{- with .Values.lcnode.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.lcnode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      initContainers:
        - name: check-master-service
          image: {{ .Values.image.server }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "/cfs/bin/check-master-service.sh"]
          env:
            - name: CBFS_MASTER_SERVICE_PORT
              value: {{ include "cubefs.master-service.with.port" . | quote }}
          volumeMounts:
            - name: cubefs-bin
              mountPath: /cfs/bin/check-master-service.sh
              subPath: check-master-service.sh
              readOnly: true
      containers:
        - name: lcnode-pod
          image: {{ .Values.image.server }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "/cfs/bin/start.sh"]
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
{{ tuple $envAll "port" .Values.lcnode.port | include "helm-toolkit.utils.container_port" | indent 12 }}
{{ tuple $envAll "prof" .Values.lcnode.prof | include "helm-toolkit.utils.container_port" | indent 12 }}
{{ tuple $envAll "exporter-port" .Values.lcnode.exporter_port | include "helm-toolkit.utils.container_port" | indent 12 }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.lcnode.port }}
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: {{ .Values.lcnode.port }}
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - name: cubefs-bin
              mountPath: /cfs/bin/start.sh
              subPath: start-lcnode.sh
              readOnly: true
            - name: cubefs-conf
              mountPath: /cfs/conf/lcnode.json
              subPath: lcnode.json
              readOnly: true
            {{- if .Values.path.log }}
            - name: pod-log-path
              mountPath: /cfs/logs
              readOnly: false
            {{- end }}
            {{- if .Values.path.data }}
            - name: pod-data-path
              mountPath: /cfs/data
              readOnly: false
            {{- end }}
          securityContext:
            capabilities:
              add: [ "SYS_RESOURCE" ]
{{ tuple $envAll .Values.lcnode.resources | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
        - name: cubefs-bin
          configMap:
            name: cubefs-bin
            defaultMode: 0555
        - name: cubefs-conf
          configMap:
            name: cubefs-conf
            defaultMode: 0555
        {{- if .Values.path.log }}
        - name: pod-log-path
          hostPath:
            path: {{ .Values.path.log }}
        {{- end }}
        {{- if .Values.path.data }}
        - name: pod-data-path
          hostPath:
            path: {{ .Values.path.data }}
        {{- end }}
{{ end }}